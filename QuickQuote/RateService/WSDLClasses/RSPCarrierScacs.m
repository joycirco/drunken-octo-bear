/*
	RSPCarrierScacs.h
	The implementation of properties and methods for the RSPCarrierScacs object.
	Generated by SudzC.com
*/
#import "RSPCarrierScacs.h"

#import "RSPArrayOfString.h"
@implementation RSPCarrierScacs
	@synthesize scacs = _scacs;
	@synthesize contractId = _contractId;
	@synthesize strategyId = _strategyId;

	- (id) init
	{
		if(self = [super init])
		{
			self.scacs = [[NSMutableArray alloc] init];
			self.contractId = nil;
			self.strategyId = nil;

		}
		return self;
	}

	+ (RSPCarrierScacs*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.scacs = [[RSPArrayOfString createWithNode: [Soap getNode: node withName: @"scacs"]] object];
			self.contractId = [Soap getNodeValue: node withName: @"contractId"];
			self.strategyId = [Soap getNodeValue: node withName: @"strategyId"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"CarrierScacs"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.scacs != nil && self.scacs.count > 0) {
			[s appendFormat: @"<scacs>%@</scacs>", [RSPArrayOfString serialize: self.scacs]];
		} else {
			[s appendString: @"<scacs/>"];
		}
		if (self.contractId != nil) [s appendFormat: @"<contractId>%@</contractId>", [[self.contractId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.strategyId != nil) [s appendFormat: @"<strategyId>%@</strategyId>", [[self.strategyId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[RSPCarrierScacs class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
