/*
	RSPAccessorialRateOverride.h
	The implementation of properties and methods for the RSPAccessorialRateOverride object.
	Generated by SudzC.com
*/
#import "RSPAccessorialRateOverride.h"

@implementation RSPAccessorialRateOverride
	@synthesize accROCode = _accROCode;
	@synthesize accRODescription = _accRODescription;
	@synthesize accROCostRateQualifier = _accROCostRateQualifier;
	@synthesize accROChargeRateQualifier = _accROChargeRateQualifier;
	@synthesize accROCost = _accROCost;
	@synthesize accROCharge = _accROCharge;
	@synthesize accROMarkupValue = _accROMarkupValue;
	@synthesize accRONote = _accRONote;
	@synthesize accROApplyMarkup = _accROApplyMarkup;
	@synthesize accROIsDollarMarkup = _accROIsDollarMarkup;
	@synthesize accROIsPercentMarkup = _accROIsPercentMarkup;

	- (id) init
	{
		if(self = [super init])
		{
			self.accROCode = nil;
			self.accRODescription = nil;
			self.accROCostRateQualifier = nil;
			self.accROChargeRateQualifier = nil;
			self.accROCost = nil;
			self.accROCharge = nil;
			self.accROMarkupValue = nil;
			self.accRONote = nil;

		}
		return self;
	}

	+ (RSPAccessorialRateOverride*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.accROCode = [Soap getNodeValue: node withName: @"accROCode"];
			self.accRODescription = [Soap getNodeValue: node withName: @"accRODescription"];
			self.accROCostRateQualifier = [Soap getNodeValue: node withName: @"accROCostRateQualifier"];
			self.accROChargeRateQualifier = [Soap getNodeValue: node withName: @"accROChargeRateQualifier"];
			self.accROCost = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"accROCost"]];
			self.accROCharge = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"accROCharge"]];
			self.accROMarkupValue = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"accROMarkupValue"]];
			self.accRONote = [Soap getNodeValue: node withName: @"accRONote"];
			self.accROApplyMarkup = [[Soap getNodeValue: node withName: @"accROApplyMarkup"] boolValue];
			self.accROIsDollarMarkup = [[Soap getNodeValue: node withName: @"accROIsDollarMarkup"] boolValue];
			self.accROIsPercentMarkup = [[Soap getNodeValue: node withName: @"accROIsPercentMarkup"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"AccessorialRateOverride"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.accROCode != nil) [s appendFormat: @"<accROCode>%@</accROCode>", [[self.accROCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.accRODescription != nil) [s appendFormat: @"<accRODescription>%@</accRODescription>", [[self.accRODescription stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.accROCostRateQualifier != nil) [s appendFormat: @"<accROCostRateQualifier>%@</accROCostRateQualifier>", [[self.accROCostRateQualifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.accROChargeRateQualifier != nil) [s appendFormat: @"<accROChargeRateQualifier>%@</accROChargeRateQualifier>", [[self.accROChargeRateQualifier stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.accROCost != nil) [s appendFormat: @"<accROCost>%@</accROCost>", [NSString stringWithFormat: @"%@", self.accROCost]];
		if (self.accROCharge != nil) [s appendFormat: @"<accROCharge>%@</accROCharge>", [NSString stringWithFormat: @"%@", self.accROCharge]];
		if (self.accROMarkupValue != nil) [s appendFormat: @"<accROMarkupValue>%@</accROMarkupValue>", [NSString stringWithFormat: @"%@", self.accROMarkupValue]];
		if (self.accRONote != nil) [s appendFormat: @"<accRONote>%@</accRONote>", [[self.accRONote stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<accROApplyMarkup>%@</accROApplyMarkup>", (self.accROApplyMarkup)?@"true":@"false"];
		[s appendFormat: @"<accROIsDollarMarkup>%@</accROIsDollarMarkup>", (self.accROIsDollarMarkup)?@"true":@"false"];
		[s appendFormat: @"<accROIsPercentMarkup>%@</accROIsPercentMarkup>", (self.accROIsPercentMarkup)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[RSPAccessorialRateOverride class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
